{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Date","getFullYear","App","props","state","telegramGroupUrl","url","window","open","focus","theme","this","address","toLowerCase","Container","component","style","backgroundColor","palette","background","paper","padding","spacing","gutterBottom","paragraph","noWrap","Link","href","footers","title","items","label","link","type","grey","borderTopWidth","maxWidth","Grid","container","justify","map","footer","item","xs","sm","key","margin","listStyle","Box","mt","features","icon","fontSize","desc","alignItems","feature","index","md","display","Card","justifyContent","flexDirection","CardHeader","titleTypographyProps","CardContent","marginBottom","Button","fullWidth","AppBar","position","Toolbar","marginRight","renderHero","renderMain","renderAction","renderFooter","React","Component","withTheme","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c043f883.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  AppBar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Toolbar,\n  Typography,\n  Container,\n  Link\n} from '@material-ui/core';\n\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport { withTheme } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© Komunitas KITA '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n    this.telegramGroupUrl = 'https://t.me/joinchat/MuhjIxV3b9N-q5r0Q6hp2w';\n  }\n\n  async componentDidMount() {\n  }\n\n  openInNewTab(url) {\n    const tab = window.open(url, '_blank');\n    tab.focus();\n  }\n\n  renderHero() {\n    const theme = this.props.theme;\n    const address = '0x55E70379BdA0F6aC91c2e4F92227db7504846c61'.toLowerCase();\n    const url = 'https://rinkeby.etherscan.io/tokens?q='+address;\n    return (\n      <Container component=\"main\" style={{\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6, 0)\n      }}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          TOKENKITA\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph style={{padding: theme.spacing(0, 2, 0, 2)}}>\n          Cryptocurrency Indonesia yang bertumbuh stabil hingga 1% per hari.\n        </Typography>\n        <Typography align=\"center\" color=\"textSecondary\">\n          Ethereum Testnet Address\n        </Typography>\n        <Typography align=\"center\" color=\"textSecondary\" noWrap style={{padding: theme.spacing(0, 2, 0, 2)}}>\n          <Link variant=\"inherit\" href={url} >\n            {address}\n          </Link>\n        </Typography>\n      </Container>\n    );\n  }\n\n  renderFooter() {\n    const theme = this.props.theme;\n    const footers = [\n      {title:'Komunitas',items:[\n        {label:'Telegram Group',link:this.telegramGroupUrl}\n      ]},\n      {title:'Informasi',items:[\n        {label:'F.A.Q',link:'#'},\n        {label:'Github',link:'https://github.com/tokenkita/tokenkita.github.io'}\n      ]},\n      {title:'Link',items:[\n        {label:'Trust Wallet',link:'https://trustwallet.com/id'},\n        {label:'Metamask',link:'https://metamask.io'},\n        {label:'RupiahToken',link:'https://rupiahtoken.com'},\n        {label:'Etherscan',link:'https://etherscan.io'}\n      ]}\n    ];\n\n    return (\n      <Container component=\"footer\" style={{\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey[700] : theme.palette.grey[300],\n        padding: theme.spacing(6),\n        borderTopWidth: 1\n      }}>\n        <Container maxWidth=\"md\" component=\"div\">\n          <Grid container spacing={4} justify=\"space-evenly\">\n            {footers.map(footer => (\n              <Grid item xs={6} sm={3} key={footer.title}>\n                <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                  {footer.title}\n                </Typography>\n                <ul style={{margin: 0,padding: 0}}>\n                  {footer.items.map(item => (\n                    <li key={item.label} style={{\n                      listStyle: 'none'\n                    }}>\n                      <Link href={item.link} variant=\"subtitle1\" color=\"textSecondary\">\n                        {item.label}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </Grid>\n            ))}\n          </Grid>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </Container>\n      </Container>\n    );\n  }\n\n  renderMain() {\n    const theme = this.props.theme;\n    const features = [\n      {\n        icon:<TrendingUpIcon fontSize='large' />,\n        desc:'Nilai penambangan dan buyback bertumbuh hingga 1% perhari.'\n      },\n      {\n        icon:<BorderColorIcon fontSize='large' />,\n        desc:'Pertumbuhan harga setiap hari tercatat di blockchain.'\n      },\n      {\n        icon:<BeachAccessIcon fontSize='large' />,\n        desc:'Buyback yang membatasi maksimum kerugian -14%.'\n      },\n      {\n        icon:<SecurityIcon fontSize='large' />,\n        desc:'Terdesentralisasi sehingga bebas blokir, dan kecurangan.'\n      },\n    ];\n\n    return (\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={4} alignItems=\"stretch\">\n        {features.map((feature,index) => (\n          <Grid key={index} item xs={12} sm={6} md={3} style={{display: 'flex'}}>\n            <Card style={{display: 'flex', justifyContent: 'space-between', flexDirection: 'column'}}>\n              <CardHeader\n                title={feature.icon}\n                titleTypographyProps={{ align: 'center' }}\n                style={{\n                  backgroundColor:\n                  theme.palette.type === 'dark' ? theme.palette.grey[700] : theme.palette.grey[200],\n                }}\n              />\n              <CardContent>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'baseline',\n                  marginBottom: theme.spacing(2),\n                }}>\n                  <Typography align=\"center\" color=\"textSecondary\">\n                    {feature.desc}\n                  </Typography>\n                </div>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n        </Grid>\n      </Container>\n    );\n  }\n\n  renderAction() {\n    const theme = this.props.theme;\n    return (\n      <Container maxWidth=\"md\" component=\"main\" style={{padding:theme.spacing(6)}} >\n        <Grid container spacing={4} justify=\"space-evenly\">\n          <Grid item xs={12} sm={6} md={6} style={{display: 'flex'}}>\n            <Button variant=\"contained\" color=\"primary\" fullWidth href={this.telegramGroupUrl}>\n              Join Telegram Group\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n  render() {\n    const theme = this.props.theme;\n    return <>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <AccountBalanceIcon style={{marginRight: theme.spacing(2)}}/>\n          <Typography variant=\"h6\" noWrap>\n            Komunitas KITA\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {this.renderHero()}\n      {this.renderMain()}\n      {this.renderAction()}\n      {this.renderFooter()}\n    </>;\n  }\n\n}\n\nexport default withTheme(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}